# This workflow will deploy the application to the running environment after a successful merge to main

name: deploy

on:
  workflow_run:
    workflows: [test] # Triggered by the test workflow
    types: [completed] # The test workflow must complete
    branches: [main] # Only when main is updated

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }} # Only when test completed successfully 
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install -r server/requirements.txt

      - name: Build application zip
        run: |
          zip -r "remindrx_deploy-${{ github.sha }}.zip" ./server ./scanner ./recommend

      - name: Upload application artifact
        uses: actions/upload-artifact@v3
        with:
          name: remindrx_application_artifact
          path: remindrx_deploy-${{ github.sha }}.zip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Upload application file to AWS
        run: aws s3 cp remindrx_deploy-${{ github.sha }}.zip s3://dddictionary-remindrx

      - name: Create new application version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name flaskbb \
          --source-bundle S3Bucket="dddictionary-remindrx",S3Key="remindrx_deploy-${{ github.sha }}.zip" \
          --version-label "ver-${{ github.sha }}" \
          --description "commit-sha-${{ github.sha }}"

      - name: Deploy application
        run: |
          aws elasticbeanstalk update-environment \
          --environment-name flaskbb-env \
          --version-label "ver-${{ github.sha }}"
